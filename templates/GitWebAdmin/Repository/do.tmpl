[% PROCESS methods.tmpl %]
[% SET nav = [ { url => 'repo/', name => 'Repositories' } ];
   FOREACH p IN repo.name().split('/');
     SET path = path _ p _ '/';
     IF loop.last();
       nav.push({ name => p });
     ELSE;
       nav.push({ url => 'repo/' _ path, name => p });
     END;
   END;
   INCLUDE header.tmpl page_title="Repository Page"
   navigation = nav
%]

[% BLOCK yes_no %]
  [% IF switch %]
  <span class="yes">yes</span>
    [% IF c.has_admin(repo) %]
    <input type="checkbox" name="options" value="[% switch_name %]"
     [% switch ? 'checked="checked"' : '' %]>
    [% END %]
  [% ELSE %]
  <span class="no">no</span>
    [% IF c.has_admin(repo) %]
    <input type="checkbox" name="options" value="[% switch_name %]"
     [% switch ? 'checked="checked"' : '' %]>
    [% END %]
  [% END %]
[% END %]

<div id="actions">
<h2>Actions</h2>
[% IF c.has_readable(repo) %]
<form action="[% c.url('repo/' _ repo.name) %]" method="get">
<p><input type="submit" value="Fork Repository">
<input type="hidden" name="_form" value="fork"></p>
</form>
[% END %]
[% IF c.has_admin(repo) %]
<form action="[% c.url('repo/' _ repo.name) %]" method="post">
<p><input type="submit" value="Delete Repository">
<input type="hidden" name="_method" value="delete"></p>
</form>
[% END %]
[% IF c.can_subscribe(repo) %]
<form action="[% c.url('repo/' _ repo.name _ '/subscription') %]" method="post">
  [% IF c.is_subscribed(repo) %]
    <p><input type="submit" value="Unsubscribe">
    <input type="hidden" name="_method" value="delete"></p>
  [% ELSE %]
    <p><input type="submit" value="Subscribe">
    <input type="hidden" name="_method" value="put"></p>
  [% END %]
</form>
[% END %]
[% IF repo.gitweb && c.cfg('links').gitweb %]
<h2>Links</h2>
<ul>
<li><a href="[% c.cfg('links').gitweb.replace('%name', repo.name) | url %]">gitweb</a></li>
</ul>
[% END %]
[% IF repo.repo({ deleted => 0 }) %]
<h2>Forks</h2>
<ul>
[% FOREACH f IN DBIxRel(repo.repo({ deleted => 0 })) %]
<li><a href="[% c.url('repo/' _ f.name) %]">[% f.name %]</a></li>
[% END %]
</ul>
[% END %]
[% INCLUDE admin_actions %]
</div> <!-- end actions -->

<h1>Repository [% repo.name() | html %]</h1>
[% IF repo.private %]<p class="subheadline">(Private Repository)</p>[% END %]
[% IF changed == 1 %]
<p class="yes">Changes applied successfully.</p>
[% ELSIF changed == 0 %]
<p>No Changes.</p>
[% END %]

[% SET default_branch = c.param('db').resultset('Branches').find({ rid => repo.id, branch => repo.branch },{ key => 'branches_rid_key' }) %]
[% IF c.has_change(repo) %]
<form action="[% c.url('repo/' _ repo.name) %]" method="post">
[% END %]
<table id="repometa">
  <tbody>
    [% IF repo.daemon && c.cfg('links').daemon %]
    <tr>
      <th>git-daemon Access:</th>
      <td><code>[% c.cfg('links').daemon.replace('%name', repo.name) | html %]</code></td>
    </tr>
    [% END %]
    [% IF c.has_readable(repo) && c.cfg('links').ssh %]
    <tr>
      <th>SSH Access:</th>
      <td><code>[% c.cfg('links').ssh.replace('%name', repo.name) | html %]</code></td>
    </tr>
    [% END %]
    [% IF repo.mirror %]
    <tr>
      [% IF c.has_admin(repo) %]
      <th><label for="mirrorof">Mirror of:</label></th>
      <td><input type="text" name="mirrorof" size="50" value="[% repo.mirror.mirrorof | html %]"></td>
      <td>[% err_mirrorof %]</td>
    </tr>
    <tr>
      <th><label for="mirrorupd">Mirror Update Intervall:</label></th>
      <td><input type="text" name="mirrorupd" size="10" value="[% repo.mirror.mirrorupd | html %]"> ([% elapsed_time(repo.mirror.mirrorupd) %])</td>
      <td>[% err_mirrorupd %]</td>
      [% ELSE %]
      <th>Mirror of:</th>
      <td><code>[% repo.mirror.mirrorof | html %]</code></td>
    </tr>
    <tr>
      <th>Mirror Update Intervall:</th>
      <td><code>[% repo.mirror.mirrorupd | html %]</code> ([% elapsed_time(repo.mirror.mirrorupd) %])</td>
      [% END %]
    </tr>
    <tr>
      <th><a href="[% c.url('mirror/') %]">Mirror Status:</a></th>
      [% IF repo.mirror.last_error %]
      <td>Error: <pre>[% repo.mirror.last_error %]</pre> (since [% elapsed_time_diff(now, repo.mirror.last_error_change, 'now') %])</td>
      [% ELSE %]
      <td>Last updated: [% elapsed_time_diff(now, repo.mirror.last_updated, 'unknown') %] (last checked: [% elapsed_time_diff(now, repo.mirror.last_check, 'now') %])</td>
      [% END %]
    </tr>
    [% END %]
    [% IF repo.descr || c.has_change(repo) %]
    <tr>
      [% IF c.has_change(repo) %]
      <th><label for="description">Description:</label></th>
      <td><input type="text" name="description" size="50" value="[% repo.descr | html %]"></td>
      <td>[% err_description %]</td>
      [% ELSE %]
      <th>Description:</th>
      <td>[% repo.descr | html %]</td>
      [% END %]
    </tr>
    [% END %]
    <tr>
      [% IF c.has_admin(repo) -%]
      <th><label for="branch">Default Branch:</label></th>
      <td><input type="text" name="branch" size="40" value="[% repo.branch | html %]">
      [%- IF default_branch;
           ' (gitweb:'; INCLUDE gitweb_branch repo=repo.name branch=repo.branch; ')';
         ELSE;
           ' (Does not exist in repository)';
         END -%]</td>
      [% ELSE -%]
      <th>Default Branch:</th>
      <td>
      [%- IF default_branch;
           INCLUDE gitweb_branch repo=repo.name branch=repo.branch;
         ELSE;
           repo.branch | html;
         END -%]</td>
      [%- END %]
    </tr>
    [% IF c.is_admin %]
    <tr>
      <th><label for="owner">Owner:</label></th>
      <td>[% INCLUDE user_dropdown select_name='owner' selected=repo.owner.uid %]</td>
    </tr>
    <tr>
      <th>Private:</th>
      <td>[% INCLUDE yes_no switch=repo.private switch_name='private' %]</td>
    </tr>
    [% ELSE %]
    <tr>
      <th>Owner:</th>
      <td><a href="[% c.url('user/' _ repo.owner().uid()) %]">
          [% repo.owner().name() | html %]</a>
      </td>
    </tr>
    [% END %]
    [% IF repo.forkof().name() %]
    <tr>
      <th>Fork of</th>
      <td><a href="[% c.url('repo/' _ repo.forkof().name()) %]">
          [% repo.forkof().name() %]</a>
      </td>
    </tr>
    [% END %]
    <tr>
      <th>Gitweb Access:</th>
      <td>[% INCLUDE yes_no switch=repo.gitweb switch_name='gitweb' %]</td>
    </tr>
    <tr>
      <th>git-daemon Access:</th>
      <td>[% INCLUDE yes_no switch=repo.daemon switch_name='daemon' %]</td>
    </tr>
    <tr>
      [% IF c.has_admin(repo) %]
      <th><label for="tags">Repository Tags:</label></th>
      <td><input type="text" name="tags" size="40" value="[% repo.tags.join(', ') | html %]"></td>
      [% ELSE %]
      <th>Repository Tags:</th>
      <td>[% repo.tags.join(', ') | html %]</td>
      [% END %]
    </tr>
  </tbody>
</table>
[% IF c.has_change(repo) %]
<p><input type="submit" value="Apply changes"></p>
</form>
[% END %]

[% IF !repo.mirrorof %]
<div id="permissions">
[% IF c.has_admin(repo) %]
  <form action="[% c.url('repo/' _ repo.name _ '/permissions') %]" method="post">
  <p><label for="w_groups">Writable by the following groups:</label></p>
  <p>[% PROCESS group_chooser select_name='w_groups' selected=DBIxRel(repo.w_groups) %]</p>
  <p><label for="r_groups">Readable by the following groups:</label></p>
  <p>[% PROCESS group_chooser select_name='r_groups' selected=DBIxRel(repo.r_groups) %]</p>
  <p><input type="submit" value="Change Permissions"></p>
  </form>
[% ELSE %]
  [% FOREACH g IN DBIxRel(repo.w_groups).sort('name') %]
    [% NEXT UNLESS g.name() %]
    [% '<p>Writable by the following groups:</p><ul>' IF loop.first() %]
    <li><a href="[% c.url('group/' _ g.gid()) %]">[% g.name() | html %]</a></li>
    [% '</ul>' IF loop.last() %]
  [% END %]

  [% FOREACH g IN DBIxRel(repo.r_groups).sort('name') %]
    [% NEXT UNLESS g.name() %]
    [% '<p>Readable by the following groups:</p><ul>' IF loop.first() %]
    <li><a href="[% c.url('group/' _ g.gid()) %]">[% g.name() | html %]</a></li>
    [% '</ul>' IF loop.last() %]
  [% END %]
[% END %]
</div>
[% END %]

<div id="trigger">
[% IF c.has_admin(repo) %]
  <form action="[% c.url('repo/' _ repo.name _ '/triggers') %]" method="post">
  <p><label for="w_groups">Triggers:</label></p>
  <p>[% PROCESS trigger_chooser select_name='triggers' selected=DBIxRel(repo.triggers) %]</p>
  <p><input type="submit" value="Change Triggers"></p>
  </form>
[% ELSE %]
  [% FOREACH t IN DBIxRel(repo.triggers).sort('name') %]
    [% '<p>Triggers:</p><ul>' IF loop.first() %]
    <li><a href="[% c.url('trigger/' _ t.name) %]">[% t.name | html %]</a></li>
    [% '</ul>' IF loop.last() %]
  [% END %]
[% END %]
</div>

[% INCLUDE footer.tmpl %]
