#!/usr/bin/perl
#
#  Copyright (C) 2009,2010 Astaro GmbH & Co. KG  www.astaro.com
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License along
#  with this program; if not, write to the Free Software Foundation, Inc.,
#  51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
#  Author: Frank Lichtenheld <flichtenheld@astaro.com> 24.09.2009
#
##############################################################################

use strict;
use warnings;

use autodie;
use File::Spec::Functions;
use Config::Auto;

use FindBin;
use Cwd qw(realpath);
use lib "$FindBin::Bin/../lib";;

use GitWebAdmin::Schema;
use GitWebAdmin::Utils;

my $GIT      = "/srv/git";

my $GWA    = realpath("$FindBin::Bin/../");
my $config = Config::Auto::parse("$GWA/gitwebadmin.ini");

my $schema = GitWebAdmin::Schema->connect("dbi:Pg:dbname=gitwebadmin");

my $tid = $ARGV[0]
  or die "Usage: init_trigger <tid>\n";

my $trigger = $schema->resultset('ExternalTriggers')->find($tid)
  or die "Couldn't find trigger with id $tid\n";
my $rt = $schema->resultset('RepoTriggers')->search({tid => $tid});
my $lp = $schema->resultset('LogsPush');
my $upd = $lp->new({ ref => 'refs/heads/master',
                     old_id => '0'x40,
                     new_id => '0'x40,
                     uid => 76 });

while( my $rt_row = $rt->next ){
  my $repo = $rt_row->rid;
  next if $repo->deleted;
  my $path = catfile('/srv/git/repositories', $repo->name);

  $ENV{GIT_DIR} = $path;

  print "Call trigger ".$trigger->name." on repo ".$repo->name."\n";
  GitWebAdmin::Utils::call_trigger($config, $repo, $upd, $trigger);
}
