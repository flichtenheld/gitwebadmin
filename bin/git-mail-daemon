#!/usr/bin/perl
#
#  Copyright (C) 2009 Astaro AG  www.astaro.com
#  All rights reserved.
#
#  Author: Frank Lichtenheld <flichtenheld@astaro.com> 07.07.2009
#
##############################################################################

use strict;
use warnings;

use autodie;
use File::Spec::Functions;

use lib "/srv/git/gitwebadmin/lib";

use Dutil;
use GitWebAdmin::Schema;

my $GIT      = "/srv/git";
my $LOG      = "$GIT/notifications.log";
my $LOCK     = "$GIT/notifications.lock";

Dutil::singularize( $LOCK );
Dutil::daemonize;
Dutil::redirect( $LOG );
Dutil::install_handlers;

Dutil::log("initialized");

my $schema = GitWebAdmin::Schema->connect("dbi:Pg:dbname=gitwebadmin");
my $rs = $schema->resultset('LogsPush')->search({notified => 0});

my $started = time();
while( 1 ){

    my $time = time();
    if( ($time - $started) > (7 * 86_400) ){
	Dutil::log("weekly restart");
	exit 0;
    }

    $rs->reset;
    while( my $row = $rs->next ){
	my $repo = $row->rid;
	my $path = catfile('/srv/git/repositories', $repo->name);

	$ENV{GIT_DIR} = $path;

        my $update_id = $row->ref." (".$row->old_id."->".$row->new_id.")";
	my @recipients = map { $_->mail } $repo->subscribers;
	if( @recipients ){
          CORE::open my $fh, '-|', ('/srv/git/hooks/post-receive-email',
                                    $row->ref, $row->old_id, $row->new_id)
	    or die "post-receive-email failed: $!\n";

          my $mail = '';
          my $count = 0;
          while( my $line = <$fh> ){
            $mail .= $line;
            if( ++$count > 10_000_000 ){
              # abort if mail gets too large
              last;
            }
          }
          close $fh
	    or die "post-receive-email failed: $!\n";

          if( $count > 10_000_000 ){
            Dutil::log($repo->name.": Mail too large for $update_id");
            goto FINISHED;
          }

          # post-receive-email will ignore some refs (e.g. remotes)
          unless( $mail ){
            Dutil::log($repo->name.": No mail generated about $update_id");
            goto FINISHED;
          }

          CORE::open my $out, '|-', (qw(/usr/sbin/sendmail -i -f),
                                     $row->uid->uid.'@git.intranet.astaro.de', @recipients)
            or die "sendmail failed: $!\n";
          print $out $mail;
          close $out
            or die "sendmail failed: $!\n";

          Dutil::log($repo->name.": Sent mail about $update_id");
          Dutil::log("Recipients: @recipients");
	}else{
          Dutil::log($repo->name.": No mail sent about $update_id");
          Dutil::log("No Recipients");
	}

      FINISHED:
	$row->notified(1);
	$row->update->discard_changes;
    }

    sleep 10;
}
